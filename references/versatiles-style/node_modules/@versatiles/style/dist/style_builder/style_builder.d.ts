import Color from 'color';
import type { MaplibreStyle } from '../types/maplibre.js';
import type { StyleBuilderColorStrings, StyleBuilderColors, StyleBuilderFontStrings, StyleBuilderOptions } from './types.js';
import type { StyleRules, StyleRulesOptions } from './types.js';
export default abstract class StyleBuilder<Subclass extends StyleBuilder<Subclass>> {
    #private;
    abstract readonly name: string;
    abstract readonly defaultColors: StyleBuilderColorStrings<Subclass>;
    abstract readonly defaultFonts: StyleBuilderFontStrings<Subclass>;
    build(options?: StyleBuilderOptions<Subclass>): MaplibreStyle;
    getColors(colors: StyleBuilderColorStrings<Subclass>): StyleBuilderColors<Subclass>;
    getDefaultOptions(): StyleBuilderOptions<Subclass>;
    protected transformDefaultColors(callback: (color: Color) => Color): void;
    protected abstract getStyleRules(options: StyleRulesOptions<Subclass>): StyleRules;
}
