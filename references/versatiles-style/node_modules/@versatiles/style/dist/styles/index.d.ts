import type StyleBuilder from '../style_builder/style_builder.js';
import type { StyleBuilderOptions } from '../style_builder/types.js';
import type { MaplibreStyle } from '../types/maplibre.js';
import type { RecolorOptions } from '../style_builder/recolor.js';
export type { MaplibreStyle, RecolorOptions };
import Colorful from './colorful.js';
import Eclipse from './eclipse.js';
import Graybeard from './graybeard.js';
import Neutrino from './neutrino.js';
import Empty from './empty.js';
export type ColorfulOptions = StyleBuilderOptions<Colorful>;
export type EclipseOptions = StyleBuilderOptions<Eclipse>;
export type GraybeardOptions = StyleBuilderOptions<Graybeard>;
export type NeutrinoOptions = StyleBuilderOptions<Neutrino>;
export type EmptyOptions = StyleBuilderOptions<Empty>;
export type SomeOptions = ColorfulOptions | EclipseOptions | EmptyOptions | GraybeardOptions | NeutrinoOptions;
type MakeStyle<T extends StyleBuilder<T>, O extends StyleBuilderOptions<T>> = ((options?: O) => MaplibreStyle) & {
    getOptions: () => O;
};
export type ColorfulBuilder = MakeStyle<Colorful, ColorfulOptions>;
export type EclipseBuilder = MakeStyle<Eclipse, EclipseOptions>;
export type GraybeardBuilder = MakeStyle<Graybeard, GraybeardOptions>;
export type NeutrinoBuilder = MakeStyle<Neutrino, NeutrinoOptions>;
export type EmptyBuilder = MakeStyle<Empty, EmptyOptions>;
export type SomeBuilder = ColorfulBuilder | EclipseBuilder | EmptyBuilder | GraybeardBuilder | NeutrinoBuilder;
export declare const colorful: ColorfulBuilder;
export declare const eclipse: EclipseBuilder;
export declare const graybeard: GraybeardBuilder;
export declare const neutrino: NeutrinoBuilder;
export declare const empty: EmptyBuilder;
