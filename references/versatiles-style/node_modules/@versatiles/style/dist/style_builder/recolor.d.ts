import Color from 'color';
export interface RecolorOptions {
    /** If true, inverts the colors. */
    invertBrightness?: boolean;
    /** The degree to rotate the hue of the color (in degrees). */
    rotate?: number;
    /** Adjusts the saturation level of the color. Positive values increase saturation, negative values decrease it. */
    saturate?: number;
    /** Adjusts the gamma of the color. Affects the brightness in a non-linear manner. */
    gamma?: number;
    /** Adjusts the contrast of the color. Higher values produce more contrast. */
    contrast?: number;
    /** Adjusts the brightness of the color. Positive values make it brighter, negative values make it darker. */
    brightness?: number;
    /** Specifies the intensity of the tinting effect. Ranges from 0 (no effect) to 1 (full effect). */
    tint?: number;
    /** Specifies the color used for tinting, in a string format (e.g., '#FF0000'). */
    tintColor?: string;
}
export declare function getDefaultRecolorFlags(): RecolorOptions;
export declare function recolorObject(colors: Record<string, Color>, opt?: RecolorOptions): void;
export declare class CachedRecolor {
    private readonly skip;
    private readonly opt?;
    private readonly cache;
    constructor(opt?: RecolorOptions);
    do(color: Color): Color;
}
export declare function recolor(color: Color, opt?: RecolorOptions): Color;
